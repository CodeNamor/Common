package datetime

import (
	"fmt"
	"testing"
	"time"
)

func Test_CalcDays(t *testing.T) {
	yesterday := time.Now().Add(-24 * time.Hour).Format(time.RFC3339)

	tests := []struct {
		start string
		end   string
		days  int
	}{
		{"2016-06-01T00:00:00Z", "2016-06-06T00:00:00Z", 5},
		{"2016-08-29T00:00:00Z", "2016-09-04T00:00:00Z", 6},
		{"2016-08-27T00:00:00Z", "2016-09-04T00:00:00Z", 8},
		{"2016-08-27T00:00:00Z", "2016-08-29T00:00:00Z", 2},
		{"2016-01-01T00:00:00Z", "2016-01-31T00:00:00Z", 30},
		{"2016-02-01T00:00:00Z", "2016-02-29T00:00:00Z", 28},
		{"2016-03-01T00:00:00Z", "2016-03-31T00:00:00Z", 30},
		{"2016-04-01T00:00:00Z", "2016-04-30T00:00:00Z", 29},
		{"2016-05-01T00:00:00Z", "2016-05-31T00:00:00Z", 30},
		{"2016-06-01T00:00:00Z", "2016-06-30T00:00:00Z", 29},
		{"2016-07-01T00:00:00Z", "2016-07-31T00:00:00Z", 30},
		{"2016-08-01T00:00:00Z", "2016-08-31T00:00:00Z", 30},
		{"2016-09-01T00:00:00Z", "2016-09-30T00:00:00Z", 29},
		{"2016-10-01T00:00:00Z", "2016-10-31T00:00:00Z", 30},
		{"2016-11-01T00:00:00Z", "2016-11-30T00:00:00Z", 29},
		{"2016-12-01T00:00:00Z", "2016-12-31T00:00:00Z", 30},
		{"2016-01-01T00:00:00Z", "2016-12-31T00:00:00Z", 365},
		{"2017-01-01T00:00:00Z", "2017-12-31T00:00:00Z", 364},
		{"x", "2018-01-01T00:00:00Z", 0},
		{yesterday, "x", 1},
		{"2016-05-18T00:00:00Z", "2016-05-20T00:00:00Z", 2},
		{"2016-05-18T05:00:00Z", "2016-05-20T04:00:00Z", 1},
	}

	for _, test := range tests {
		subTestName := fmt.Sprintf("%s-%s", test.start, test.end)
		t.Run(subTestName, func(t *testing.T) {
			var from, to time.Time
			from, _ = time.Parse(time.RFC3339, test.start)
			to, _ = time.Parse(time.RFC3339, test.end)

			days := CalcDays(from, to)
			if days != test.days {
				t.Fatalf("Expected %v, got %v", test.days, days)
			}
		})
	}
}
